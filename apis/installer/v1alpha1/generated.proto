/*
Copyright The Stash Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package stash.appscode.dev.postgres.apis.installer.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

message ImageRef {
  optional string registry = 1;

  optional string repository = 2;

  optional string tag = 3;
}

message PostgresBackup {
  // +optional
  optional string cmd = 1;

  // +optional
  optional string args = 2;
}

message PostgresRestore {
  // +optional
  optional string args = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=stashpostgreses,singular=stashpostgres,categories={stash,appscode}
message StashPostgres {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StashPostgresSpec spec = 2;
}

// StashPostgresList is a list of StashPostgress
message StashPostgresList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StashPostgres CRD objects
  repeated StashPostgres items = 2;
}

// StashPostgresSpec is the schema for Stash Postgres values file
message StashPostgresSpec {
  // +optional
  optional string nameOverride = 1;

  // +optional
  optional string fullnameOverride = 2;

  optional ImageRef image = 3;

  optional PostgresBackup backup = 4;

  optional PostgresRestore restore = 5;

  optional int64 waitTimeout = 6;
}

